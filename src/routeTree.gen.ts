/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StepsImport } from './routes/steps'
import { Route as IndexImport } from './routes/index'
import { Route as StepsIndexImport } from './routes/steps.index'
import { Route as StepsCompleteImport } from './routes/steps.complete'
import { Route as StepsCImport } from './routes/steps.c'
import { Route as StepsBImport } from './routes/steps.b'
import { Route as StepsAImport } from './routes/steps.a'

// Create/Update Routes

const StepsRoute = StepsImport.update({
  path: '/steps',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StepsIndexRoute = StepsIndexImport.update({
  path: '/',
  getParentRoute: () => StepsRoute,
} as any)

const StepsCompleteRoute = StepsCompleteImport.update({
  path: '/complete',
  getParentRoute: () => StepsRoute,
} as any)

const StepsCRoute = StepsCImport.update({
  path: '/c',
  getParentRoute: () => StepsRoute,
} as any)

const StepsBRoute = StepsBImport.update({
  path: '/b',
  getParentRoute: () => StepsRoute,
} as any)

const StepsARoute = StepsAImport.update({
  path: '/a',
  getParentRoute: () => StepsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/steps': {
      id: '/steps'
      path: '/steps'
      fullPath: '/steps'
      preLoaderRoute: typeof StepsImport
      parentRoute: typeof rootRoute
    }
    '/steps/a': {
      id: '/steps/a'
      path: '/a'
      fullPath: '/steps/a'
      preLoaderRoute: typeof StepsAImport
      parentRoute: typeof StepsImport
    }
    '/steps/b': {
      id: '/steps/b'
      path: '/b'
      fullPath: '/steps/b'
      preLoaderRoute: typeof StepsBImport
      parentRoute: typeof StepsImport
    }
    '/steps/c': {
      id: '/steps/c'
      path: '/c'
      fullPath: '/steps/c'
      preLoaderRoute: typeof StepsCImport
      parentRoute: typeof StepsImport
    }
    '/steps/complete': {
      id: '/steps/complete'
      path: '/complete'
      fullPath: '/steps/complete'
      preLoaderRoute: typeof StepsCompleteImport
      parentRoute: typeof StepsImport
    }
    '/steps/': {
      id: '/steps/'
      path: '/'
      fullPath: '/steps/'
      preLoaderRoute: typeof StepsIndexImport
      parentRoute: typeof StepsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  StepsRoute: StepsRoute.addChildren({
    StepsARoute,
    StepsBRoute,
    StepsCRoute,
    StepsCompleteRoute,
    StepsIndexRoute,
  }),
})

/* prettier-ignore-end */
